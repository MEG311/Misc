include.lowest = TRUE)
numClasses <- table(y)
numClasses
foldVector <- vector("integer", length(y))
seqVector <- rep(1:k, numClasses[i]%/%k)
seqVector
seqVector
foldVector[which(y == dimnames(numClasses)$y[i])] <- seqVector
foldVector
suppressWarnings(foldVector[which(y == dimnames(numClasses)$y[i])] <- seqVector)
foldVector
create.folds <- function(y, k = 5, random = F, returnTrain = F) {
y <- sort(y)
if (is.numeric(y)) {
cuts <- round(length(y)/k)
y <- cut(y, unique(quantile(y, probs = seq(0, 1, length = cuts))),
include.lowest = TRUE)
}
numClasses <- table(y)
foldVector <- vector("integer", length(y))
if (!random) {
for (i in 1:length(numClasses)) {
seqVector <- rep(1:k, numClasses[i]%/%k)
seqVector <- c(seqVector, seqVector)
suppressWarnings(foldVector[which(y == dimnames(numClasses)$y[i])] <- seqVector)
}
} else {
set.seed(length(y))
for (i in 1:length(numClasses)) {
seqVector <- rep(1:k, numClasses[i]%/%k)
seqVector <- c(seqVector, sample(1:k, numClasses[i]%%k))
foldVector[which(y == dimnames(numClasses)$y[i])] <- sample(seqVector)
}
}
out <- split(seq(along = y), foldVector)
names(out) <- paste("Fold", as.character(seq(out)), sep = "")
if (returnTrain) {
out <- lapply(out, function(data, y) y[-data], y = seq(y))
}
return(out)
}
set.seed(5)
y <- rnorm(100, 5, 1)
create.folds(y)
out <- create.folds(y)
length(out$Fold1)
length(out$Fold2)
length(out$Fold3)
length(out$Fold4)
length(out$Fold5)
out <- create.folds(y, random = T)
out
y <- sort(y)
if (is.numeric(y)) {
cuts <- round(length(y)/k)
y <- cut(y, unique(quantile(y, probs = seq(0, 1, length = cuts))),
include.lowest = TRUE)
}
k = 5
if (is.numeric(y)) {
cuts <- round(length(y)/k)
y <- cut(y, unique(quantile(y, probs = seq(0, 1, length = cuts))),
include.lowest = TRUE)
}
y
numClasses <- table(y)
numClasses
foldVector <- vector("integer", length(y))
for (i in 1:length(numClasses)) {
seqVector <- rep(1:k, numClasses[i]%/%k)
seqVector <- c(seqVector, seqVector)
suppressWarnings(foldVector[which(y == dimnames(numClasses)$y[i])] <- seqVector)
}
foldVector
split(seq(along = y), foldVector)
seq(y)
for (i in 1:length(numClasses)) {
seqVector <- rep(1:k, numClasses[i]%/%k)
#         seqVector <- c(seqVector, seqVector)
suppressWarnings(foldVector[which(y == dimnames(numClasses)$y[i])] <- seqVector)
}
split(seq(y), foldVector)
numClasses[i]%/%k
?ceiling
for (i in 1:length(numClasses)) {
seqVector <- rep(1:k, floor(numClasses[i]/k))
#         seqVector <- c(seqVector, seqVector)
suppressWarnings(foldVector[which(y == dimnames(numClasses)$y[i])] <- seqVector)
}
split(seq(y), foldVector)
y
seqVector
for (i in 1:length(numClasses)) {
seqVector <- rep(1:k, numClasses[i]%/%k)
seqVector <- c(seqVector, seqVector)
suppressWarnings(foldVector[which(y == dimnames(numClasses)$y[i])] <- seqVector)
}
seqVector
length(numClasses)
wdir <- "C:/Users/MEG/Documents/R_study/_PCI/data/"
x <- local(get(load(paste(wdir, "sol_x1.RData", sep = ''))))
y <- local(get(load(paste(wdir, "sol_y1.RData", sep = ''))))
require(caret)
require(doParallel)
registerDoParallel(3)
preProc <- preProcess(x, method = c("scale", "center"))
x <- predict(preProc, x)
set.seed(42)
cv <- createFolds(y, 5, returnTrain = T)
trControl <- trainControl(method = "LGOCV",
index = cv,
savePredictions = T,
preProcOptions = NULL)
plsGrid <- data.frame(ncomp= 5)
m.pls <- train(x, y,
method = "pls",
trControl = trControl,
tuneGrid = plsGrid)
knnGrid <- data.frame(k=seq(1,20,2))
m.knn <- train(x, y,
method="knn",
trControl=trControl,
tuneGrid=knnGrid)
getwd
getwd()
setwd("C:/Users/MEG/Documents/R_study/_PCI/")
cv <- read.table("data/cv_pred.txt", sep="\t", header=TRUE, as.is=TRUE)
cv <- read.table("models_predictions/cv_pred.txt", sep="\t", header=TRUE, as.is=TRUE)
test <- read.table("models_predictions/test_pred.txt", sep="\t", header=TRUE, as.is=TRUE)
head(cv)
require(ggplot2)
head(test)
cv <- round(cv, 2)
test <- round(test, 2)
head(cv)
y <- local(get(load("data/sol_y1.RData")))
y.test <- local(get(load("data/sol_y2.RData")))
cv$obs <- y
test$obs <- y.test
test$set <- "test"
head(cv)
cv$set <- "cv"
test$set <- "test"
cv$set
df <- rbind(cv, test)
View(df)
g1 <- ggplot(df, aes(x = obs, y = m.gbm)) + geom_point()
g1
g2 <- ggplot(df, aes(x = obs, y = m.gbm, color = set)) + geom_point()
g2
melt(df)
??melt
require(reshape)
melt(df)
g3 <- ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set)) + geom_point()
g4 <- ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set)) + geom_point(size = 4)
g4
ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set, size = set)) + geom_point()
s <- c(2, 8)
names(s) <- c("cv", "test")
ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set, size = s)) + geom_point()
ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set)) + geom_point() + scale_size_discrete(range = s)
ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set)) + geom_point() + scale_size_discrete(c(10, 2))
ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set)) + geom_point() + scale_size_manual(s)
ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set)) + geom_point() + scale_size_continuous(s)
g5 <- ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set)) + geom_point(size = 4, alpha = .5)
g5
g5 <- ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set)) + geom_point(size = 4, alpha = .8)
g5
?geom_abline
g6 <- ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set)) + geom_point(size = 4, alpha = .8) +
+ geom_abline(aes(0, 0))
g6 <- ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set)) + geom_point(size = 4, alpha = .8) +
+ geom_abline(aes(0, 45), df)
g6 <- ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set)) + geom_point(size = 4, alpha = .8) +
+ geom_abline(aes(0, 45), data.frame(x=c(-12,2))
g6 <- ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set)) + geom_point(size = 4, alpha = .8) +
geom_abline(aes(0, 45), data.frame(x=c(-12,2))
g6 <- ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set)) + geom_point(size = 4, alpha = .8) +
geom_abline(aes(0, 45), data.frame(x=c(-12,2)))
g6
g6 <- ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set)) + geom_point(size = 4, alpha = .8) +
geom_line(data=data.frame(x=c(-12,2), y=c(-12,2)), aes(x=x, y=y))
g6 <- ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set)) + geom_point(size = 4, alpha = .8) +
geom_line(data=data.frame(x=c(-12,2), y=c(-12,2)), aes(x=x, y=y))
g6
g6 <- ggplot(df, aes(x = obs, y = m.gbm, color = set, shape = set)) + geom_point(size = 4, alpha = .8) +
geom_line(data=data.frame(x=c(-12,2), y=c(-12,2)), aes(x=x, y=y))
g6
g6 <- ggplot(df, aes(x=obs, y=m.gbm)) +
geom_point(aes(color=set, shape=set), size=3, alpha=0.5) +
geom_line(data=data.frame(x=c(-12,2), y=c(-12,2)), aes(x=x, y=y))
g6
g6 <- ggplot(df, aes(x=obs, y=m.gbm)) +
geom_point(aes(color=set, shape=set), size=3, alpha=0.5) +
#   geom_line(data=data.frame(x=c(-12,2), y=c(-12,2)), aes(x=x, y=y))
geom_abline(0, 1)
g6 <- ggplot(df, aes(x=obs, y=m.gbm)) +
geom_point(aes(color=set, shape=set), size=3, alpha=0.5) +
#   geom_line(data=data.frame(x=c(-12,2), y=c(-12,2)), aes(x=x, y=y))
geom_abline(0, 1)
g6
g6 <- ggplot(df, aes(x=obs, y=m.gbm)) +
geom_point(aes(color=set, shape=set), size=3, alpha=0.5) +
#   geom_line(data=data.frame(x=c(-12,2), y=c(-12,2)), aes(x=x, y=y))
geom_abline(intercept = 0, slope = 1)
g6
?geom_abline
??slope
g7 <- ggplot(df, aes(x=obs, y=m.gbm)) +
geom_line(data=data.frame(x=c(-12,2), y=c(-12,2)), aes(x=x, y=y)) +
geom_point(aes(color=set, shape=set), size=3, alpha=0.5)
g7
g8 <- g7 + stat_smooth(method="lm")
g8
g8 <- g7 + stat_smooth(method = "loess")
g8
g8 <- g7 + stat_smooth(method = "nlr")
g8
g8 <- g7 + stat_smooth(method = "lm")
g8
g8 <- g7 + stat_smooth(method = "lm", aes(group=set))
g8
g8 <- g7 + stat_smooth(method = "lm", aes(colour=set))
g8
g10 <- ggplot(df, aes(x=obs, y=m.gbm)) +
geom_abline(intercept = 0, slope = 1) +
geom_point(aes(color=set, shape=set), size=3, alpha=0.5) +
stat_smooth(method="lm", aes(group=set, color=set), fullrange=TRUE, se=FALSE)
g10
g10 <- ggplot(df, aes(x=obs, y=m.gbm)) +
geom_abline(intercept = 0, slope = 1) +
geom_point(aes(color=set, shape=set), size=3, alpha=0.5) +
stat_smooth(method="lm", aes(group=set, color=set), fullrange=TRUE, se=T, level = 0.99)
g10
g10 <- ggplot(df, aes(x=obs, y=m.gbm)) +
geom_abline(intercept = 0, slope = 1) +
geom_point(aes(color=set, shape=set), size=3, alpha=0.5) +
stat_smooth(method="lm", aes(group=set, color=set), fullrange=TRUE, se= FALSE)
g10
g11 <- g10 + scale_color_grey()
g11
g12 <- g10 + scale_color_hue()
g12
g12 <- g10 + scale_color_gradient()
g12
g12 <- g10 + scale_color_identity()
g12
g12 <- g10 + scale_color_manual(c("red", "blue"))
g12
g12 <- g10 + scale_color_manual(values = c("red", "blue"))
g12
g10 <- ggplot(df, aes(x=obs, y=m.gbm)) +
geom_abline(intercept = 0, slope = 1) +
geom_point(aes(color=set, shape=set), size=4, alpha=0.5) +
stat_smooth(method="lm", aes(group=set, color=set), fullrange=TRUE, se= FALSE)
g10
g12 <- g10 + scale_color_manual(values = c("red", "blue"))
g12
g12.1 <- ggplot(df, aes(x=obs, y=m.gbm)) +
geom_line(data=data.frame(x=c(-12,2), y=c(-12,2)), aes(x=x, y=y)) +
geom_point(aes(color=set, shape=set), size=3, alpha=0.5) +
stat_smooth(method="lm", aes(group=set, color=set), fullrange=TRUE, se=FALSE) +
scale_color_manual(values=c("#FF22FF", "#2255FF"))
g12.1
g12.1 <- ggplot(df, aes(x=obs, y=m.gbm)) +
geom_line(data=data.frame(x=c(-12,2), y=c(-12,2)), aes(x=x, y=y)) +
geom_point(aes(color=set, shape=set), size=4, alpha=0.5) +
stat_smooth(method="lm", aes(group=set, color=set), fullrange=TRUE, se=FALSE) +
scale_color_manual(values=c("#FF22FF", "#2255FF"))
g12.1
g12.2 <- ggplot(df, aes(x=obs, y=m.gbm)) +
geom_line(data=data.frame(x=c(-12,2), y=c(-12,2)), aes(x=x, y=y)) +
geom_point(aes(color=set, shape=set), size=3, alpha=0.5) +
stat_smooth(method="lm", aes(group=set, color=set), fullrange=TRUE, se=FALSE) +
scale_x_reverse()
g12.2
g12.3 <- ggplot(df, aes(x=obs, y=m.gbm)) +
geom_line(data=data.frame(x=c(-12,2), y=c(-12,2)), aes(x=x, y=y)) +
geom_point(aes(color=set, shape=set), size=3, alpha=0.5) +
stat_smooth(method="lm", aes(group=set, color=set), fullrange=TRUE, se=FALSE) +
scale_x_reverse() +
scale_y_reverse()
g12.3
g12.4 <- ggplot(df, aes(x=obs, y=m.gbm)) +
geom_line(data=data.frame(x=c(-12,2), y=c(-12,2)), aes(x=x, y=y)) +
geom_point(aes(color=set, shape=set), size=3, alpha=0.5) +
stat_smooth(method="lm", aes(group=set, color=set), fullrange=TRUE, se=FALSE) +
scale_color_manual(values=c("red", "blue")) +
coord_flip()
g12.4
g13 <- ggplot(df, aes(x=obs, y=m.gbm)) +
geom_line(data=data.frame(x=c(-12,2), y=c(-12,2)), aes(x=x, y=y)) +
geom_point(aes(color=set, shape=set), size=3, alpha=0.5) +
stat_smooth(method="lm", aes(group=set, color=set), fullrange=TRUE, se=FALSE) +
scale_color_manual(values=c("red", "blue"))
g13
g13.1 <- g13 + theme_bw()
g13.1
g13.2 <- g13 + theme_classic()
g13.2
g13.3 <- g13 + theme_minimal()
g13.3
g13.4 <- g13 +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1))
g13.4
g13.4 <- g13 +
theme_bw(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1)
)
g13.4 <- g13 +
theme_bw(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1))
g13.4 <- g13 +
theme_bw() +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1))
g13.4
g13.4 <- g13 +
theme_minimal() +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1))
g13.4
g13.5 <- g13 +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1),
panel.background = element_rect(color="green", fill="lightgreen"))
g13.5
g13.5 <- g13 +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1),
panel.background = element_rect(color="black", fill="lightgreen"))
g13.5
g13.5 <- g13 +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=-1),
panel.background = element_rect(color="black", fill="lightgreen"))
g13.5
g13.5 <- g13 +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=0),
panel.background = element_rect(color="black", fill="lightgreen"))
g13.5
g13.5 <- g13 +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1),
panel.background = element_rect(color="black", fill="lightgreen"))
g13.5
g13.5 <- g13 +
theme(text = element_text(color="red", size=15, angle=45, hjust=1),
panel.background = element_rect(color="black", fill="lightgreen"))
g13.5
g13.5 <- g13 +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1),
panel.background = element_rect(color="black", fill="lightgreen"), panel.grid = grid.lines(color="green"))
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1),
panel.background = element_rect(color="black", fill="lightgreen"), panel.grid = element_line(color="green"))
g13.5
g13.5 <- g13 +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1),
panel.background = element_rect(color="black", fill="lightgreen"), panel.grid = element_line(color="green"))
g13.5
g13.6 <- g13 +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1),
panel.background = element_rect(color="pink", fill="lightyellow"),
panel.grid = element_line(color = "green"))
g13.6
g13.6 <- g13 +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1),
panel.background = element_rect(fill="lightgreen"),
panel.grid = element_line(color = "black"))
g13.6
g13.6 <- g13 +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1),
panel.background = element_rect(color = "blue", fill="lightgreen")
)
g13.6
g13.6 <- g13 +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1),
panel.background = element_rect(colour = "blue", fill="lightgreen"),
panel.grid = element_line(color = "black"))
g13.6
g13.6 <- g13 +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1),
panel.background = element_rect(colour = "blue", fill="lightgreen"),
panel.grid = element_blank())
g13.6
g14 <- ggplot(df, aes(x=obs, y=m.gbm)) +
geom_line(data=data.frame(x=c(-12,2), y=c(-12,2)), aes(x=x, y=y)) +
geom_point(aes(color=set, shape=set), size=3, alpha=0.5) +
stat_smooth(method="lm", aes(group=set, color=set), fullrange=TRUE, se=FALSE) +
scale_color_manual(values=c("red", "blue")) +
facet_wrap(~set)
g14
head(test)
g15 <- ggplot(df, aes(x=obs)) +
geom_histogram()
g15
g15.1 <- ggplot(df, aes(x=obs)) +
geom_histogram(binwidth=1)
g15.1
g15.1 <- ggplot(df, aes(x=obs)) +
geom_histogram(binwidth=1, aes(fill=set))
g15.1
g15.2 <- ggplot(df, aes(x=obs)) +
geom_histogram(binwidth=1, aes(fill=set))
g15.2
g15.3 <- ggplot(df, aes(x=obs)) +
geom_histogram(binwidth=1, aes(fill=set), color="white")
g15.3
g15.3 <- ggplot(df, aes(x=obs)) +
geom_histogram(binwidth=1, aes(fill=set), color="black")
g15.3
g15.4 <- ggplot(df, aes(x=obs)) +
geom_histogram(binwidth=1, aes(fill=set), color="black") +
facet_wrap(~set)
g15.4
g15.4 <- ggplot(df, aes(x=obs)) +
geom_histogram(binwidth=1, aes(fill=set), color="white") +
facet_wrap(~set)
g15.4
g15.4 <- ggplot(df, aes(x=obs)) +
geom_histogram(binwidth=1, aes(fill=set), color="white") +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1),
panel.background = element_rect(colour = "blue", fill="lightgreen"),
panel.grid = element_blank()) +
facet_wrap(~set)
g15.4
g15.4 <- ggplot(df, aes(x=obs)) +
geom_histogram(binwidth=1, aes(fill=set), color="white") +
theme(axis.text.x = element_text(color="red", size=15, angle=45, hjust=1),
panel.background = element_rect(colour = "blue", fill="lightblue"),
panel.grid = element_blank()) +
facet_wrap(~set)
g15.4
g15.4 <- ggplot(df, aes(x=obs)) +
geom_histogram(binwidth=1, aes(fill=set), color="purple") +
facet_wrap(~set)
g15.4
g15.4 <- ggplot(df, aes(x=obs)) +
geom_histogram(binwidth=1, aes(fill=set), color="black") +
facet_wrap(~set)
g15.4
g15.4 <- ggplot(df, aes(x=obs)) +
geom_histogram(binwidth=1, aes(fill=set), color="white") +
facet_wrap(~set)
g15.4
g15.4 <- ggplot(df, aes(x=obs)) +
geom_histogram(binwidth=1, aes(fill=set), color="white") +
theme(legend.position = "none") +
facet_wrap(~set)
g15.4
g15.5 <- ggplot(df, aes(x=obs)) +
geom_histogram(binwidth=1, aes(fill=set), color="white") +
theme(legend.position = "none") +
facet_wrap(~set, ncol=1)
g15.5
g15.6 <- g15.5 + facet_wrap(scales="free_y")
g15.5 <- ggplot(df, aes(x=obs)) +
geom_histogram(binwidth=1, aes(fill=set), color="white") +
theme(legend.position = "none") +
facet_wrap(~set, ncol=1, scales = "free_y")
g15.5
g15.7 <- ggplot(df, aes(x=obs)) +
geom_density(aes(fill=set), color="white") +
facet_wrap(~set, ncol=1)
g15.7
require(reshape)
df1 <- melt(df)
head(df1)
df1 <- melt(df, id.vars=c("set","obs"))
head(df1)
head(df)
dim(df1)
head(df)
dim(df1)
head(df)
head(df1)
colnames(df1)[3:4] <- c("model", "pred")
head(df1)
g16 <- ggplot(df1, aes(x=obs, y=pred)) +
geom_point(aes(color=set)) +
facet_wrap(~ model)
g16
g16.1 <- g16 + theme_classic()
g16.1
?melt
?dcasr
?dcast
??dcast
df1$rmse <- (df1$obs - df1$model) ^ 2
head(df1)
df1 <- df1[,1:4]
head(df1)
df1$obs - df1$model
(df1$obs - df1$pred) ^ 2
df1$mse <- (df1$obs - df1$pred) ^ 2
head(df1)
g17 <- ggplot(df1, aes(x=model, y = mse)) +
geom_bar(stat="summary", fun.y = "mean", aes(fill=set), position = "stack")
g17
g17 <- ggplot(df1, aes(x=model, y = mse)) +
geom_bar(stat="summary", fun.y = "mean", aes(fill=set), position = "dodge")
g17
ggsave("data/plot.jpg", plot=g17 + theme_classic(), width=20, height=15, units="cm", dpi=600)
g17 <- ggplot(df1, aes(x=model, y = mse)) +
geom_bar(aes(fill=set), position = "dodge")
g17
ggplot(df1, aes(x=model, y = mse)) + geom_bar()
ggsave("data/plot.jpg", plot=g17 + theme_classic(), width=20, height=15, units="cm", dpi=600)
g17 <- ggplot(df1, aes(x=model, y = mse)) +
geom_bar(stat="summary", fun.y = "mean", aes(fill=set), position = "dodge")
g17
ggsave("data/plot.jpg", plot=g17 + theme_classic(), width=20, height=15, units="cm", dpi=600)
rmse <- function(x) {
sqrt(mean(x))
}
g18 <- ggplot(df1, aes(x=model, y = mse)) +
geom_bar(stat="summary", fun.y = rmse, aes(fill=set), position = "dodge")
g18
RMSE
